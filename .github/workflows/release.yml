name: Release
on:
  push:
    branches:
      - master
      - 'alpha/*'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('yarn.lock', 'tools/src/**/*.ts') }}
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Execute
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Start Release
        id: semantic
        run: npx semantic-release --dry-run
      - name: Set publish
        id: set-publish
        #  We only want to build publishable libs, hence target publish
        run: yarn script set-affected --target publish --base ${{ steps.semantic.outputs.last-head || 'HEAD' }} --with-deps
    outputs:
      next-version: ${{ steps.semantic.outputs.next-version || '0.0.0' }}
      publish-comma: ${{ steps.set-publish.outputs.comma-separated }}

  publish-libs:
    name: Publish Libs
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Load Dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('yarn.lock', 'tools/src/**/*.ts') }}
      - name: Version
        if: ${{ needs.install.outputs.publish-comma }}
        run: yarn add @ns3/nx-npm
      - name: Version
        if: ${{ needs.install.outputs.publish-comma }}
        run: yarn nx run-many --projects ${{ needs.install.outputs.publish-comma }} --target version --parallel --pkgVersion ${{ needs.install.outputs.next-version }}
      - name: Build
        if: ${{ needs.install.outputs.publish-comma }}
        run: yarn nx run-many --projects ${{ needs.install.outputs.publish-comma }} --target build --parallel --buildableProjectDepsInPackageJsonType dependencies
      - name: Publish
        if: ${{ needs.install.outputs.publish-comma }}
        run: yarn nx run-many --projects ${{ needs.install.outputs.publish-comma }} --target publish --parallel

  release:
    name: Release
    needs: [install, publish-libs]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Load Dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('yarn.lock', 'tools/src/**/*.ts') }}
      - name: Execute
        run: npx semantic-release --failure ${{ needs.publish-libs.result != 'success' }}
