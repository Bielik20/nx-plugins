name: Check
on:
  push:
    branches-ignore:
      - master
      - 'alpha/*'

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('<%= lockFileName %>', 'tools/src/**/*.ts') }}
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Execute
        if: steps.cache.outputs.cache-hit != 'true'
        run: <%= installCommand %>
      - name: Set Variables
        id: variables
        run: yarn script set-push-variables
      - name: Set build
        id: set-build
        run: yarn script set-affected --target build --base ${{ steps.variables.outputs.base }} --with-deps
      - name: Set e2e
        id: set-e2e
        run: yarn script set-affected --target e2e --base ${{ steps.variables.outputs.base }}
      - name: Set lint
        id: set-lint
        run: yarn script set-affected --target lint --base ${{ steps.variables.outputs.base }}
      - name: Set test
        id: set-test
        run: yarn script set-affected --target test --base ${{ steps.variables.outputs.base }}
    outputs:
      e2e-array: ${{ steps.set-e2e.outputs.array }}
      build-comma: ${{ steps.set-build.outputs.comma-separated }}
      lint-comma: ${{ steps.set-lint.outputs.comma-separated }}
      test-comma: ${{ steps.set-test.outputs.comma-separated }}

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Load Dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('<%= lockFileName %>', 'tools/src/**/*.ts') }}
      - name: Execute
        if: ${{ needs.install.outputs.build-comma }}
        run: yarn nx run-many --projects ${{ needs.install.outputs.build-comma }} --target build --parallel

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Load Dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('<%= lockFileName %>', 'tools/src/**/*.ts') }}
      - name: Execute
        if: ${{ needs.install.outputs.lint-comma }}
        run: npm run nx -- run-many --projects ${{ needs.install.outputs.lint-comma }} --target lint --parallel -- --quiet

  test:
    name: Test
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Load Dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('<%= lockFileName %>', 'tools/src/**/*.ts') }}
      - name: Execute
        if: ${{ needs.install.outputs.test-comma }}
        run: yarn nx run-many --projects ${{ needs.install.outputs.test-comma }} --target test --parallel

  e2e:
    name: E2E
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.install.outputs.e2e-array) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Load Dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            tools/src/**/*.js
          key: dependencies-${{ runner.os }}-${{ hashFiles('<%= lockFileName %>', 'tools/src/**/*.ts') }}
      - name: Execute
        run: yarn nx run ${{ matrix.project }}:e2e

  e2e-done:
    name: E2E
    needs: [install, e2e]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check status
        if: ${{ needs.e2e.result != 'success' && !contains(needs.install.outputs.e2e-array, '[]') }}
        run: exit 1
